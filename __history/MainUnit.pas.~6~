unit MainUnit;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, OpenImage, Vcl.StdCtrls;

type


  TMainForm = class(TForm)
    Timer1: TTimer;
    Timer2: TTimer;
    procedure Timer1Timer(Sender: TObject);

    procedure CreateButton(var ButtonName: TButton; Form: TForm; HeightInteger, WidthInteger, LeftInteger, TopInteger: Integer; CaptionString: String);
    procedure CreateImage(var ImageName: TImage; Form: TForm; HeightInteger, WidthInteger, LeftInteger, TopInteger: Integer; LoadImageName: String);
    procedure CreatePaintbox(var PaintboxName: TPaintbox; Form: TForm; HeightInteger, WidthInteger, LeftInteger, TopInteger: Integer);


    procedure buttonClick(Sender: TObject);
    procedure PaintboxClick(Sender: TObject);

    procedure FormCreate(Sender: TObject);
    procedure CreateUI();

    procedure DrawSideBar(Canvas: TPaintbox);
    procedure DrawTopBar;
    procedure DrawSelector;
    procedure DrawBox(Ptn: TPaintbox);

  private
    { Private-Deklarationen }
  public
    { Public-Deklarationen }
  end;

var
  MainForm: TMainForm;
  Test: TButton;
  BackgroundColor: TColor;
  PtnSideBar, PtnTopBar, PtnSortingSelection: TPaintbox;
  SettingsBoxImage, StatusBoxImage, DiagramBoxImage, ListboxImage: TPaintbox;


implementation

{$R *.dfm}

procedure TMainForm.CreateButton(var ButtonName: TButton; Form: TForm; HeightInteger, WidthInteger, LeftInteger, TopInteger: Integer; CaptionString: String);
begin
  ButtonName:= TButton.Create(Form);

  with ButtonName do
  begin
    Caption:= CaptionString;
    Parent := Form;
    Height := HeightInteger;
    Width := WidthInteger;
    Left:= LeftInteger;
    Top:= TopInteger;
    OnClick:= ButtonClick;
  end;

end;

procedure TMainForm.CreatePaintbox(var PaintboxName: TPaintbox; Form: TForm; HeightInteger, WidthInteger, LeftInteger, TopInteger: Integer);
begin
  PaintboxName:= TPaintbox.Create(Form);

  with PaintboxName do
  begin
    Parent := Form;
    Height := HeightInteger;
    Width := WidthInteger;
    Left:= LeftInteger;
    Top:= TopInteger;
    //Canvas.Rectangle(0,0, Width, Height);
    OnClick:= PaintboxClick;
  end;
end;


procedure TMainForm.CreateImage(var ImageName: TImage; Form: TForm; HeightInteger, WidthInteger, LeftInteger, TopInteger: Integer; LoadImageName: String);
begin
  ImageName:= TImage.Create(Form);

  with ImageName do
  begin
    Parent := Form;
    Height := HeightInteger;
    Width := WidthInteger;
    Left:= LeftInteger;
    Top:= TopInteger;
    Proportional:= True;

  end;

  LoadImage(LoadImageName, ImageName);

end;



procedure TMainForm.FormCreate(Sender: TObject);
begin
  BackgroundColor:= rgb(231,231, 231);
  color:= BackgroundColor;
end;

procedure TMainForm.buttonClick(Sender: TObject);
var
  Button: TButton;
begin
  Button:= Sender as TButton;
end;

procedure TMainForm.PaintboxClick(Sender: TObject);
var
  Paintbox: TPaintbox;
begin
  Paintbox:= Sender as TPaintbox;

  if Paintbox.Height = 50 then
  begin
    with PtnSortingSelection.Canvas do
    begin
      Brush.Color:= clWhite;
      Rectangle(0,0, 100, 100);
    end;
  end;

end;

procedure TMainForm.DrawSideBar(Canvas: TPaintbox);
begin
  with PtnSideBar.Canvas do
  begin
    Pen.Color:= clWhite;
    Brush.Color:= clWhite;

    Rectangle(0,0, MainForm.Width, MainForm.Height);
  end;

end;

procedure TMainForm.DrawTopBar;
begin
  with PtnTopBar.Canvas do
  begin
    Pen.Color:= clWhite;
    Brush.Color:= clWhite;

    Rectangle(0,0, MainForm.Width, MainForm.Height);
  end;

end;

procedure TMainForm.DrawSelector;
begin
  with PtnSortingSelection.Canvas do
  begin
    Brush.Color:= clBlack;
    RoundRect(0,0,PtnSortingSelection.Width, PtnSortingSelection.Height, PtnSortingSelection.Height, PtnSortingSelection.Height);
  end;
end;


procedure TMainForm.DrawBox(Ptn: TPaintbox);
begin
  with Ptn.Canvas do
  begin
    Brush.Color:= clWhite;
    Pen.Color:= clWhite;
    RoundRect(0,0,Ptn.Width, Ptn.Height, 30, 30);
  end;
end;




procedure TMainForm.CreateUI;
begin

  //Create All Objects
  CreatePaintbox(PtnSideBar, MainForm, MainForm.Height, 70, 0,0);
  CreatePaintbox(PtnTopBar, MainForm, 50, MainForm.Width, 0,0);

  //Setting
  CreatePaintbox(SettingsBoxImage, MainForm, 536, 330, 928, 215);
  CreatePaintbox(PtnSortingSelection, MainForm, 50, 280, 953, 252);

  //Listbox
  CreatePaintbox(ListBoxImage, MainForm, 650, 96 , 793, 100);

  //Diagram
  CreatePaintbox(DiagramBoxImage, MainForm, 650, 650, 100, 100);

  //Status
  CreatePaintbox(StatusBoxImage, MainForm, 93, 329, 928, 100);

  CreateButton(Test, MainForm, 0, 0, 0, 0, 'Test');

  //Draw the UI on specific objects

  PtnSideBar.Canvas.LineTo(100, 100);
  DrawSideBar(PtnSideBar);
  DrawTopBar;
  DrawBox(SettingsBoxImage);
  DrawBox(ListBoxImage);
  DrawBox(DiagramBoxImage);
  DrawBox(StatusBoxImage);
  DrawSelector;


end;

procedure TMainForm.Timer1Timer(Sender: TObject);
begin

  CreateUI;
  Timer1.Enabled:= false;
end;

end.
