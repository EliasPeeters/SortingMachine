unit SmartConfig;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls;

type
  TSmartConfigForm = class(TForm)
    SmartConfigPtn: TPaintBox;
    Timer1: TTimer;
    procedure Timer1Timer(Sender: TObject);
    procedure SmartConfigPtnClick(Sender: TObject);
    procedure DrawPart1(Canvas: TPaintbox);
    procedure DrawBarAnimation(Canvas: TPaintbox);
  private
    { Private-Deklarationen }
  public
    { Public-Deklarationen }
  end;

var
  SmartConfigForm: TSmartConfigForm;
  OpacityPartOne: Integer = 255;

implementation

{$R *.dfm}

procedure DrawBlack(Canvas: TPaintbox);
var
  StorageBrushColor, StoragePenColor: TColor;
begin
  StorageBrushColor:= Canvas.Canvas.Brush.Color;
  StoragePenColor:=  Canvas.Canvas.Pen.Color;
  Canvas.Canvas.Pen.Color:= clBlack;
  Canvas.Canvas.Brush.Color:= clBlack;
  Canvas.Canvas.Rectangle(0,0,Canvas.Width, Canvas.Height);
  Canvas.Canvas.Pen.Color:= StoragePenColor;
  Canvas.Canvas.Brush.Color:= StorageBrushColor;
end;

procedure DrawDot(Canvas: TPaintbox; x, y: Integer; Color: TColor);
begin
  with Canvas.Canvas do
  begin
    Brush.Color:= Color;
    Pen.Color:= Color;
    Ellipse(x-1, y-1, x+1, y+1);
    Pen.Color:= clWhite;
    //LineTo(x, y);
  end;
end;

procedure DrawForm(Canvas: TPaintbox);
begin
  with Canvas.Canvas do
  begin
    Brush.Color:= clBlack;
    Pen.Color:= clWhite;
    Pen.Width:= 5;
    RoundRect(100,20, 250, 170, 20, 20);
    Brush.Color:= clBlack;
    Pen.Color:= clBlack;
    Rectangle(0, 50, Canvas.Width, 140);
    Rectangle(130, 0, 220, Canvas.Height-80);
    Font.Color:= clWhite;
    Font.Size:= 15;
    TextOut(105, 200, 'AI is Processing');
  end;
end;

procedure TSmartConfigForm.DrawPart1(Canvas: TPaintbox);
var
StorageColor: TColor;
begin
  StorageColor:= rgb(OpacityPartOne, OpacityPartOne, OpacityPartOne);
  Canvas.Canvas.Brush.Color:= StorageColor;
  Canvas.Canvas.Pen.Color:= StorageColor;
  DrawDot(Canvas, 230, 45, StorageColor);
  DrawDot(Canvas, 175, 40, StorageColor);
  DrawDot(Canvas, 120, 45, StorageColor);
  DrawDot(canvas, 130, 95, StorageColor);
  DrawDot(Canvas, 175, 95, StorageColor);
  DrawDot(canvas, 220, 95, StorageColor);
  DrawDot(canvas, 230, 110, StorageColor);
  DrawDot(Canvas, 230, 145, StorageColor);
  DrawDot(Canvas, 175, 150, StorageColor);
  DrawDot(Canvas, 120, 145, StorageColor);

  with Canvas.Canvas do
  begin
    Pen.Color:= rgb(OpacityPartOne, OpacityPartOne, OpacityPartOne);
    Pen.Width:= 1;
    MoveTo(230, 45);
    LineTo(175, 40);
    LineTo(120, 45);
    LineTo(130, 95);
    LineTo(175, 95);
    LineTo(220, 95);
    LineTo(230, 110);
    LineTo(230, 145);
    LineTo(175, 150);
    LineTo(120, 145);

  end;
  if OpacityPartOne > 2 then OpacityPartOne:= OpacityPartOne-2
  else OpacityPartOne:= 0;
end;

procedure TSmartConfigForm.DrawBarAnimation(Canvas: TPaintbox);
var
  I, II: Integer;
begin

    for I := 18 to 167 do
    begin
      TThread.Synchronize(nil,
        procedure
        begin
          DrawBlack(Canvas);
          DrawForm(Canvas);
          DrawPart1(canvas);
          Canvas.Canvas.Pen.Width:= 0;
          Canvas.Canvas.Brush.Color:= clWhite;
          Canvas.Canvas.Pen.Color:= clWhite;
          Canvas.Canvas.Rectangle(110, I, 240, I+5);

        end
        );
     sleep(40);
    end;
      for I := 167 downto 18 do
    begin
      TThread.Synchronize(nil,
        procedure
        begin
          DrawBlack(Canvas);
          DrawForm(Canvas);
          DrawPart1(canvas);
          Canvas.Canvas.Pen.Width:= 0;
          Canvas.Canvas.Brush.Color:= clWhite;
          Canvas.Canvas.Pen.Color:= clWhite;
          Canvas.Canvas.Rectangle(110, I, 240, I+5);

        end
        );
     sleep(40);
    end;
end;


procedure TSmartConfigForm.SmartConfigPtnClick(Sender: TObject);
begin
  DrawBlack(SmartConfigPtn);
end;


procedure TSmartConfigForm.Timer1Timer(Sender: TObject);
begin
  DrawBlack(SmartConfigPtn);
  DrawForm(SmartConfigPtn);
  //DrawDot(SmartConfigPtn, 100, 100);
    TThread.CreateAnonymousThread(
      procedure
      begin

        DrawBarAnimation(SmartConfigPtn);
        SmartConfigForm.Close;
      end
    ).Start();

    //DrawPart1(SmartConfigPtn);

  Timer1.Enabled:= false;
end;

end.
